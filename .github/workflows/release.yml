name: Release

on:
  workflow_dispatch:
  
jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{steps.create_release.outputs.upload_url}}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3.3.0
        with:
          submodules: recursive

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          draft: true
          tag_name: ${{github.ref}}
          release_name: Release ${{github.ref}}
     
  build-windows:
    name: Build Windows
    needs: create_release
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3.3.0
      with:
        submodules: recursive

    - name: Setup MSBuild and add to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Restore NuGet Packages
      run: dotnet restore

    - name: Run Image Processor
      working-directory: ${{github.workspace}}
      run: |
        msbuild .\ChartPlayer.sln /restore /t:Rebuild /t:ImageProcessor /p:Configuration="Release" 
        cd ImageProcessor\bin\Release\net8.0
        .\ImageProcessor.exe
        
    - name: Run MSBuild
      working-directory: ${{github.workspace}}
      run: msbuild .\ChartPlayer.sln /p:Configuration=Release
      
    - name: Add Plugin Archive
      working-directory: ${{github.workspace}}
      run: |
        mkdir plugin-build
        move ChartPlayerPlugin\bin\Release\net8.0-windows plugin-build\ChartPlayer
        cp ChartPlayerPlugin\README.txt plugin-build
        Compress-Archive -Path plugin-build\* -Destination ChartPlayerVST3Plugin.zip
    
    - name: Upload Plugin Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./ChartPlayerVST3Plugin.zip
        asset_name: ChartPlayerVST3Plugin.zip
        asset_content_type: application/zip

    - name: Publish Linux-x64
      working-directory: ${{github.workspace}}
      run: dotnet publish .\ChartPlayerJack\ChartPlayerJack.csproj --runtime linux-x64 -p:PublishSingleFile=true --self-contained true

    - name: Add Linux-x64 Archive
      working-directory: ${{github.workspace}}
      run: |
        mkdir linux-x64-build
        move ChartPlayerJack\bin\Release\net8.0\linux-x64\publish linux-x64-build\ChartPlayer
        Compress-Archive -Path linux-x64-build\* -Destination ChartPlayerLinux.zip

    - name: Upload Linux-x64 Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./ChartPlayerLinux.zip
        asset_name: ChartPlayerLinux.zip
        asset_content_type: application/zip
      
    - name: Publish OSX-x64
      working-directory: ${{github.workspace}}
      run: dotnet publish .\ChartPlayerJack\ChartPlayerJack.csproj --runtime osx-x64 -p:PublishSingleFile=true --self-contained true

    - name: Add OSX-x64 Archive
      working-directory: ${{github.workspace}}
      run: |
        mkdir osx-x64-build
        move ChartPlayerJack\bin\Release\net8.0\osx-x64\publish osx-x64-build\ChartPlayer
        Compress-Archive -Path osx-x64-build\* -Destination ChartPlayerMacX64.zip

    - name: Upload OSX-x64 Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./ChartPlayerMacX64.zip
        asset_name: ChartPlayerMacX64.zip
        asset_content_type: application/zip

    - name: Publish OSX-arm64
      working-directory: ${{github.workspace}}
      run: dotnet publish .\ChartPlayerJack\ChartPlayerJack.csproj --runtime osx-arm64 -p:PublishSingleFile=true --self-contained true

    - name: Add OSX-arm64 Archive
      working-directory: ${{github.workspace}}
      run: |
        mkdir osx-arm64-build
        move ChartPlayerJack\bin\Release\net8.0\osx-arm64\publish osx-arm64-build\ChartPlayer
        Compress-Archive -Path osx-arm64-build\* -Destination ChartPlayerMacArm64.zip
        
    - name: Upload OSX-arm64 Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./ChartPlayerMacArm64.zip
        asset_name: ChartPlayerMacArm64.zip
        asset_content_type: application/zip
